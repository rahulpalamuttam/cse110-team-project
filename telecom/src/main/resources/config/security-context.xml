<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
     xmlns="http://www.springframework.org/schema/security"
     xmlns:beans="http://www.springframework.org/schema/beans"
     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xsi:schemaLocation="http://www.springframework.org/schema/beans
                         http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                         http://www.springframework.org/schema/security
                         http://www.springframework.org/schema/security/spring-security-3.2.xsd">

     <http auto-config="true" use-expressions="true" disable-url-rewriting="true">
          <intercept-url pattern="/login" access="permitAll" />
          <intercept-url pattern="/dashboard" access="hasRole('ROLE_USER')" />
          <intercept-url pattern="/dashboard/" access="hasRole('ROLE_USER')" />


          <access-denied-handler error-page="/"/>
          
          <form-login login-page="/auth/login"
                      username-parameter="email"
                      password-parameter="password"
                      login-processing-url="/auth/loginProcess"
                      default-target-url="/dashboard"
                      authentication-failure-url="/auth/login?error" />

          <logout invalidate-session="true" logout-url="/logout" logout-success-url="/" />

         <session-management>
            <concurrency-control max-sessions="1" />
         </session-management>
     </http>

    <authentication-manager alias="authenticationManager">
        <authentication-provider>
            <password-encoder hash="bcrypt"/>
            <jdbc-user-service data-source-ref="dataSource"
                              users-by-username-query="select email, password, enabled from users where email=?"
                              authorities-by-username-query="select u1.email, u2.role from users u1, user_roles u2 where u1.email=u2.email and u1.email=?"/>
        </authentication-provider>
    </authentication-manager>

</beans:beans>